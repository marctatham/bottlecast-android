apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// load up the external properties - for signing configuration
Properties props = new Properties()
try {
    props.load(file('properties.properties').newDataInputStream())
} catch (Exception exception) {
    throw new GradleException("properties.properties not found", exception)
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.koala.messagebottle"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        def keyStorePassword = "${props.getProperty("keyStorePassword")}"
        def keyStoreAlias = "${props.getProperty("keyStoreAlias")}"
        def keyStoreAliasPassword = "${props.getProperty("keyStoreAliasPassword")}"

        debug {
            storeFile file("message-bottle-debug.jks")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        release {
            storeFile file("message-bottle-release.jks")
            storePassword keyStorePassword
            keyAlias keyStoreAlias
            keyPassword keyStoreAliasPassword
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX support / architecture components
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.core:core-ktx:$versionCoreKtx"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versionLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versionLifecycle"
    implementation "androidx.fragment:fragment-ktx:$versionFragment"

    // kotlin ktx
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versionKotlin"

    // better logging
    implementation "com.jakewharton.timber:timber:$versionTimber"

    // okhttp
    api "com.squareup.okhttp3:okhttp:$versionOkHttp"
    api "com.squareup.okhttp3:logging-interceptor:$versionOkHttp"

    // moshi
    api "com.squareup.moshi:moshi-kotlin:$versionMoshi"
    api "com.squareup.moshi:moshi-adapters:$versionMoshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versionMoshi"

    // retrofit + moshi
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    // Dagger
    implementation "com.google.dagger:dagger-android:$versionDagger"
    implementation "com.google.dagger:dagger-android-support:$versionDagger"
    kapt "com.google.dagger:dagger-compiler:$versionDagger"
    kapt "com.google.dagger:dagger-android-processor:$versionDagger"

    // Using Dagger in androidTest and Robolectric too
    kaptAndroidTest "com.google.dagger:dagger-compiler:2.29.1"
    kaptTest "com.google.dagger:dagger-compiler:2.29.1"

    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.google.firebase:firebase-auth-ktx:19.4.0'
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
    implementation 'com.google.android.material:material:1.2.1'

    // kotlinx
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versionKotlinXCoroutinesCore"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versionKotlinX"


    implementation "com.airbnb.android:lottie:$versionLottie"

    testImplementation 'junit:junit:4.13'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
